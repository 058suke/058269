---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const tags = getUniqueTags(posts);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);

const tagPosts = getPostsByTag(posts, tag);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header />
  <main id="main-content">
    <h1 class="animate-slide-in-title">{`#${tag}`}</h1>
    <p class="animate-slide-in-subtitle">{`#${tag} のタグがついている記事 ${tagPosts.length}件`}</p>
    <ul class="animate-slide-in-contents grid gap-y-4 gap-x-8 sm:grid-cols-2">
      {
        tagPosts.map(({ data }) => (
          <Card href={`/posts/${slugify(data)}`} frontmatter={data} />
        ))
      }
    </ul>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto mt-20 w-full max-w-3xl px-4 pb-12 sm:mt-20 sm:pt-10;
  }
  #main-content {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  #main-content h1 {
    @apply text-2xl font-semibold;
  }
  #main-content p {
    @apply mt-2 mb-6 text-sm opacity-80;
  }
</style>
