---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime.astro";
import type { CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, image, author, description, ogImage, pubDatetime, tags } =
  post.data;

const { Content } = await post.render();

const ogImageUrl = ogImage ? new URL(ogImage, Astro.url.origin).href : "";
---

<Layout
  title={title}
  author={author}
  description={description}
  ogImage={ogImageUrl}
>
  <Header />
  <main id="main-content">
    <h1 class="post-title animate-slide-in-title text-center">
      {title}
    </h1>
    <Datetime
      datetime={pubDatetime}
      size="sm"
      className="my-2 justify-center animate-slide-in-subtitle"
    />
    <ul class="tags-container animate-slide-in-tag flex justify-center">
      {tags.map(tag => <Tag name={tag} />)}
    </ul>
    {
      image && (
        <picture class="animate-slide-in-image">
          <source srcset={`${image}.jpg`} type="image/jpg" />
          <img
            class="duration-0 w-full rounded-2xl drop-shadow-xl"
            loading="lazy"
            src={`${image}.jpg`}
          />
        </picture>
      )
    }
    <article
      id="article"
      role="article"
      class="markdown-body animate-slide-in-article mx-auto mt-6 max-w-3xl sm:mt-12"
    >
      <Content />
    </article>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl mt-20 sm:pt-10 px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold;
  }
  .tags-container {
    @apply my-2 sm:my-8;
  }
</style>
